<Window x:Class="WpfApplicationJFCGrid.Window1"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"        
        xmlns:f="clr-namespace:JFCGridControl;assembly=JFCGridControl"
        xmlns:m="clr-namespace:WpfApplicationJFCGrid"
        Title="Window1"
        Height="457"
        Width="488"
        FontFamily="Comic Sans MS"
        FontSize="12"
        x:Name="Me"
        SnapsToDevicePixels="True"
        UseLayoutRounding="False">
    <Window.Resources>
        <LinearGradientBrush x:Key="HeaderColumnBrush"
                             EndPoint="0.5,1"
                             StartPoint="0.5,0">
            <GradientStop Color="#6Ff4f9ff"
                          Offset="0" />
            <GradientStop Color="#6Fe1ebf6"
                          Offset="1" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="BorderHeaderColumnBrush"
                         Color="#FF93b6e4" />

        <Style x:Key="{x:Type f:JFCGridColumnHeader}"
               TargetType="{x:Type f:JFCGridColumnHeader}">
            <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Setter Property="MinHeight"
                    Value="20" />
            <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />            
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type f:JFCGridColumnHeader}">
                        <Grid Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="10"></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition Width="10"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Rectangle x:Name="Rect"
                                       Fill="{StaticResource HeaderColumnBrush}"
                                       Margin="0,0,1,-8"
                                       RadiusX="8"
                                       RadiusY="8"
                                       Stroke="{StaticResource BorderHeaderColumnBrush}"
                                       Grid.Column="0"
                                       Grid.ColumnSpan="3" />
                            <Line VerticalAlignment="Bottom"
                                  Stroke="{StaticResource BorderHeaderColumnBrush}"
                                  StrokeThickness="1"
                                  x:Name="Line"
                                  X2="{Binding Path=ActualWidth, ElementName=Line, Mode=Default}"
                                  Grid.Column="0"
                                  Grid.ColumnSpan="3" />
                            <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              RecognizesAccessKey="True"
                                              Grid.Column="1" Focusable="False" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                                     Value="true">
                                <Setter Property="Stroke"
                                        Value="#FFFFFF00"
                                        TargetName="Rect" />
                            </Trigger>
                            <!--<Trigger Property="ColumnTest.HaveChildren" Value="False">
                                <Setter TargetName="Line" Property="Visibility" Value="Collapsed"/>
                            </Trigger>-->
                            <DataTrigger Binding="{Binding Path=Column.HaveChildren, RelativeSource={RelativeSource Self}}" Value="true">
                                <Setter TargetName="Line" Property="Visibility" Value="Collapsed"/>                                
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=BelowHeader.IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true">
                                <Setter Property="Stroke"
                                        Value="#FFFFFF00"
                                        TargetName="Rect" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Type f:JFCGridColumnBelowHeader}"
               TargetType="{x:Type f:JFCGridColumnBelowHeader}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type f:JFCGridColumnBelowHeader}">
                        <Border x:Name="border"
                                Margin="0,0,1,0"
                                Background="#FFe1ebf6"
                                BorderThickness="1,0,1,1"
                                BorderBrush="{StaticResource BorderHeaderColumnBrush}"/>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                                     Value="true">
                                <Setter Property="BorderBrush"
                                        Value="#FFFFFF00"
                                        TargetName="border" />
                            </Trigger>
                            <!--<Trigger Property="Parent.IsMouseOver"
                                     Value="true">
                                <Setter Property="BorderBrush"
                                        Value="#FFFFFF00"
                                        TargetName="border" />
                            </Trigger>-->
                            <DataTrigger Binding="{Binding Path=Parent.IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true">
                                <Setter Property="BorderBrush"
                                        Value="#FFFFFF00"
                                        TargetName="border" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- JFCGridItem  -->
        <Style x:Key="{x:Type f:JFCGridItem}"
               TargetType="{x:Type f:JFCGridItem}">
            <Setter Property="SnapsToDevicePixels"
                    Value="true" />
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="f:JFCGridItem">
                        <Border Name="Border"
                                SnapsToDevicePixels="true"
                                BorderThickness="0,0,0,1"
                                BorderBrush="Blue"
                                Background="Transparent">
                            <ContentPresenter></ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsAlternate"
                                     Value="true">
                                <Setter Property="Background"
                                        Value="Gray"
                                        TargetName="Border" />
                            </Trigger>
                            <Trigger Property="IsMouseOverLine"
                                     Value="true">
                                <Setter Property="Background"
                                        Value="Red"
                                        TargetName="Border" />
                            </Trigger>
                            <Trigger Property="IsSelected"
                                     Value="true">
                                <Setter TargetName="Border"
                                        Property="Background"
                                        Value="Blue" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!--<Style x:Key="{x:Type f:JFCGridCell}"
               TargetType="{x:Type f:JFCGridCell}">
            <Setter Property="SnapsToDevicePixels"
                    Value="true" />
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type f:JFCGridCell}">
                        <TextBlock Text="toto">                
                        </TextBlock>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->

        <!--<ControlTemplate x:Key="TemplateCell" TargetType="{x:Type f:JFCGridCell}">            
            <f:CellImg Text="{Binding}" />
        </ControlTemplate>-->

        <ControlTemplate x:Name="ColumnSupportCellTemplate"
                         x:Key="ColumnSupportCellTemplate" TargetType="f:JFCGridCell">

            <StackPanel Orientation="Horizontal" Margin="3,0,0,0">
                <!--<jfc:CellImg x:Name="libelle" Text="{Binding}" Grid.Column="0"/>-->
                <TextBlock x:Name="SuppTextBlock" Text="{Binding}" Grid.Column="0" Foreground="Aqua"/>
                <!--<Border x:Name="SuppImg" Background="Aqua" Width="16" Height="16" Margin="10,0,0,0" Visibility="Hidden" Opacity="0" Grid.Column="1" MouseEnter="SuppImg_MouseEnter" MouseLeave="SuppImg_MouseLeave" IsVisibleChanged="SuppImg_IsVisibleChanged"/>
                <TextBlock x:Name="TextOver" Text="" Grid.Column="0" Foreground="Aqua"/>-->
            </StackPanel>


            <!--<ControlTemplate.Triggers>
                <Trigger Property="IsMouseOverLineItem"  
                                 Value="true">
                    <EventSetter Event="IsMouseOverLineChanged" Handler="cell_IsMouseOverLineChanged"/>
                </Trigger>-->

            <!--<DataTrigger Binding="{Binding ElementName=Me,Path=IsTxtTooltip}" Value="false">
                    <Setter Property="Visibility"
                                    Value="Hidden"
                                    TargetName="SuppImg" />
                </DataTrigger>-->
            <!--</ControlTemplate.Triggers>-->
        </ControlTemplate>


        <ControlTemplate x:Key="SegmentTemplateKey">
            <StackPanel Orientation="Horizontal">
                <CheckBox Name="CheckBoxSeg"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      IsChecked="{Binding Path=IsChecked, Mode=TwoWay, TargetNullValue=false}"                      
                      />
                <TextBlock Text="{Binding Path=IsChecked, Mode=OneWay, TargetNullValue=false}" />
            </StackPanel>
        </ControlTemplate>

        <ControlTemplate x:Name="CellTemplate"
                         x:Key="CellTemplate" TargetType="f:JFCGridCell">
            <TextBlock Text="{Binding}"/>
        </ControlTemplate>

        <ControlTemplate x:Name="CellTemplate2"
                         x:Key="CellTemplate2" TargetType="f:JFCGridCell">
            <TextBlock Text="{Binding}" VerticalAlignment="Center" HorizontalAlignment="Stretch" TextWrapping="Wrap"/>
        </ControlTemplate>

        <ControlTemplate x:Key="FooterLibelleTemplateKey">
            <Border Background="Pink">
                <TextBlock Text="Total" Foreground="Black"  HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center"/>
            </Border>
        </ControlTemplate>
    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <!--<ColumnDefinition Width="300"/>-->
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="100"/>            
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal" Background="LightBlue" Grid.Row="1" Margin="0,6,0,0">
            <Button x:Name="MyButton" Margin="0,0,0,0" Content="Add" Visibility="Hidden"></Button>
            <Button x:Name="MyButton1" Margin="0,0,0,0" Content="left" Click="MyButton1_Click"></Button>
            <!--Click="MyButton_Click"-->
            <Button x:Name="MyButton2" Margin="0,0,0,0" Content="right" Click="MyButton2_Click"></Button>
            <!--<Button x:Name="MyButton3"
                    Margin="0,0,0,0"
                    Content="Del"
                    Click="MyButton3_Click"></Button>
            <Button x:Name="MyButton4"
                    Margin="0,0,0,0"
                    Content="Recharge"
                    Click="MyButton4_Click"></Button>
            <Button x:Name="MyButton5"
                    Margin="0,0,0,0"
                    Content="Change Color"
                    Click="MyButton5_Click"></Button>-->
            <Button x:Name="MyButtonChargement" Margin="0,0,0,0" Content="Chargement" Click="MyButtonChargement_Click"/>
            <Button x:Name="MyButtonAffichage" Margin="0,0,0,0" Content="Affichage" Click="MyButtonAffichage_Click"/>
            <Button x:Name="MyButtonExpande" Margin="0,0,0,0" Content="Expande"  Click="MyButtonExpande_Click"/>
        </StackPanel>
        <f:JFCGrid x:Name="MyGrid"
                   HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" ColumnMovable="True" LineOverChanged="MyGrid_LineOverChanged">
        </f:JFCGrid>

        <!--<TreeView x:Name="MyTreeView" Grid.Column="2" ItemsSource="{Binding}" ItemTemplate="{StaticResource PersonItemTemplate}">
            
        </TreeView>-->        
        
    </Grid>
</Window>
